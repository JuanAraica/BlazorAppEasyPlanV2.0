@page "/getperson/{Id}"
@using BlazorApp1.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<h2>Delete Person</h2>
@if(person != null)
{
<p>All Details to <b>@person.FirstName @person.LastName</b></p>
<div class="row">
       <table class="table">
               <tr>
                       <td>Name</td>
                       <td>@person.FirstName @person.LastName</td>
                   </tr>
               <tr>
                       <td>Email</td>
                       <td>@person.Email</td>
                   </tr>
               <tr>
                       <td>Mobile Number</td>
                       <td>@person.MobileNo</td>
                   </tr>
           </table>
</div>
}
<div class="row">
        <div class="col-md-4">
                <div class="form-group">

                         <a class="btn btn-danger"  href="/deleteperson/@person.Id">Delete</a> 
                         <a class="btn btn-primary"  href="/editperson/@person.Id">Edit</a> 
                        <input type="button" class="btn" @onclick="@Cancel" value="Back" />
                    </div>
            </div>
</div>
@code {
    [Parameter]
    public string Id{ get; set; }
    PersonViewModel person = new PersonViewModel();
    protected override async Task OnInitializedAsync()
    {
        person = await Http.GetFromJsonAsync<PersonViewModel>("api/person/" + Id);
        }
        protected async Task Delete()
        {
            var response = await Http.DeleteAsync("api/Person/" + Id);
            bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();
                if (deleteResponse)
                {
                    await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
                    NavigationManager.NavigateTo("personlist");
                }
            }
            void Cancel()
            {
                NavigationManager.NavigateTo("personlist");
            }
        }